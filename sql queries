TABLE CREATION 
CREATE TABLE Users (
    user_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100) UNIQUE,
    registration_date DATE
);

CREATE TABLE Courses (
    course_id INT PRIMARY KEY,
    course_name VARCHAR(100),
    description TEXT
);

CREATE TABLE Enrollments (
    enrollment_id INT PRIMARY KEY,
    user_id INT,
    course_id INT,
    enrollment_date DATE,
    FOREIGN KEY (user_id) REFERENCES Users(user_id),
    FOREIGN KEY (course_id) REFERENCES Courses(course_id)
);

CREATE TABLE Assignments (
    assignment_id INT PRIMARY KEY,
    course_id INT,
    title VARCHAR(100),
    due_date DATE,
    FOREIGN KEY (course_id) REFERENCES Courses(course_id)
);

CREATE TABLE Submissions (
    submission_id INT PRIMARY KEY,
    assignment_id INT,
    user_id INT,
    submission_date DATE,
    grade DECIMAL(5, 2),
    FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id),
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

CREATE TABLE Schedules (
    schedule_id INT PRIMARY KEY,
    user_id INT,
    event_title VARCHAR(100),
    start_datetime DATETIME,
    end_datetime DATETIME,
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

CREATE TABLE Goals (
    goal_id INT PRIMARY KEY,
    user_id INT,
    goal_description TEXT,
    target_date DATE,
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

CREATE TABLE Notifications (
    notification_id INT PRIMARY KEY,
    user_id INT,
    message TEXT,
    created_at DATETIME,
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

CREATE TABLE Preferences (
    preference_id INT PRIMARY KEY,
    user_id INT,
    preference_key VARCHAR(100),
    preference_value VARCHAR(255),
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

CREATE TABLE Resources (
    resource_id INT PRIMARY KEY,
    course_id INT,
    title VARCHAR(100),
    url VARCHAR(255),
    FOREIGN KEY (course_id) REFERENCES Courses(course_id)
);

CREATE TABLE Feedback (
    feedback_id INT PRIMARY KEY,
    user_id INT,
    content TEXT,
    submitted_at DATETIME,
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

CREATE TABLE Academic_Performance (
    performance_id INT PRIMARY KEY,
    user_id INT,
    course_id INT,
    gpa DECIMAL(4, 2),
    FOREIGN KEY (user_id) REFERENCES Users(user_id),
    FOREIGN KEY (course_id) REFERENCES Courses(course_id)
);

Inserting Table
-- Insertions for Users
INSERT INTO Users (user_id, first_name, last_name, email, registration_date) 
VALUES 
(1, 'Alice', 'Smith', 'alice.smith@example.com', '2025-01-01'),
(2, 'Bob', 'Johnson', 'bob.johnson@example.com', '2025-01-05'),
(3, 'Carol', 'Williams', 'carol.williams@example.com', '2025-01-10'),
(4, 'David', 'Brown', 'david.brown@example.com', '2025-01-15');

-- Insertions for Courses
INSERT INTO Courses (course_id, course_name, description) 
VALUES 
(1, 'Introduction to AI', 'An introductory course on Artificial Intelligence'),
(2, 'Database Systems', 'Comprehensive course on database design and management'),
(3, 'Web Development', 'Learn the fundamentals of web development and design'),
(4, 'Data Structures', 'Study of various data structures and their applications');

-- Insertions for Enrollments
INSERT INTO Enrollments (enrollment_id, user_id, course_id, enrollment_date) 
VALUES 
(1, 1, 1, '2025-01-20'),
(2, 2, 2, '2025-01-22'),
(3, 3, 3, '2025-01-24'),
(4, 4, 4, '2025-01-26');

-- Insertions for Assignments
INSERT INTO Assignments (assignment_id, course_id, title, due_date) 
VALUES 
(1, 1, 'AI Assignment 1', '2025-02-01'),
(2, 2, 'Database Assignment 1', '2025-02-05'),
(3, 3, 'Web Dev Assignment 1', '2025-02-10'),
(4, 4, 'Data Structures Assignment 1', '2025-02-15');

-- Insertions for Submissions
INSERT INTO Submissions (submission_id, assignment_id, user_id, submission_date, grade) 
VALUES 
(1, 1, 1, '2025-02-02', 90.0),
(2, 2, 2, '2025-02-06', 85.5),
(3, 3, 3, '2025-02-11', 78.0),
(4, 4, 4, '2025-02-16', 88.2);

-- Insertions for Schedules
INSERT INTO Schedules (schedule_id, user_id, event_title, start_datetime, end_datetime) 
VALUES 
(1, 1, 'AI Lecture', '2025-01-20 09:00', '2025-01-20 11:00'),
(2, 2, 'Database Lecture', '2025-01-22 10:00', '2025-01-22 12:00'),
(3, 3, 'Web Dev Workshop', '2025-01-24 14:00', '2025-01-24 16:00'),
(4, 4, 'Data Structures Lab', '2025-01-26 13:00', '2025-01-26 15:00');

-- Insertions for Goals
INSERT INTO Goals (goal_id, user_id, goal_description, target_date) 
VALUES 
(1, 1, 'Complete AI course with a high grade', '2025-06-01'),
(2, 2, 'Master database queries', '2025-06-15'),
(3, 3, 'Build a personal website', '2025-06-30'),
(4, 4, 'Understand data structures thoroughly', '2025-07-15');

-- Insertions for Notifications
INSERT INTO Notifications (notification_id, user_id, message, created_at) 
VALUES 
(1, 1, 'Your AI assignment is due soon!', '2025-02-01 08:00'),
(2, 2, 'Database lecture has been rescheduled', '2025-02-05 10:00'),
(3, 3, 'New Web Dev assignment posted', '2025-02-10 09:00'),
(4, 4, 'Data Structures Lab tomorrow', '2025-02-15 13:00');

-- Insertions for Preferences
INSERT INTO Preferences (preference_id, user_id, preference_key, preference_value) 
VALUES 
(1, 1, 'theme', 'dark'),
(2, 2, 'language', 'English'),
(3, 3, 'notifications', 'enabled'),
(4, 4, 'font_size', 'medium');

-- Insertions for Resources
INSERT INTO Resources (resource_id, course_id, title, url) 
VALUES 
(1, 1, 'AI Lecture Notes', 'http://example.com/ai-notes'),
(2, 2, 'Database Schema Tutorial', 'http://example.com/db-tutorial'),
(3, 3, 'Web Dev Frameworks', 'http://example.com/web-frameworks'),
(4, 4, 'Data Structures Examples', 'http://example.com/data-structures');

-- Insertions for Feedback
INSERT INTO Feedback (feedback_id, user_id, content, submitted_at) 
VALUES 
(1, 1, 'Great course on AI!', '2025-02-02 12:00'),
(2, 2, 'Found the Database course very useful', '2025-02-06 14:00'),
(3, 3, 'Loved the Web Dev assignments', '2025-02-11 16:00'),
(4, 4, 'Data Structures labs were challenging', '2025-02-16 18:00');

-- Insertions for Academic_Performance
INSERT INTO Academic_Performance (performance_id, user_id, course_id, gpa) 
VALUES 
(1, 1, 1, 3.8),
(2, 2, 2, 3.6),
(3, 3, 3, 3.7),
(4, 4, 4, 3.9);
